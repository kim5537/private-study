// //시간 내장 함수 =특징 콜백함수 사용가능 this를 사용하면 윈도우가 나옴

// // 2초에 한번식 콘솔에 인사하기

// function greeting() {
//   console.log("안녕");
// }

// //먼저 콘솔로 인사하는 함수를 만들었다. 보다 깔금하게 함수를 만들 기 위함
// const timer = setInterval(greeting, 2000);

// clearInterval(timer);

//setInterver = 특정시간에 맞춰 무언가 반복
//clearInterver = 반복 실행중인 시간 내장함수를 멈춰주는 함수.  단독으로  쓰지않고 조건으 걸어 멈추는 경우가 많다.
//setInterval등을  멈출 땐 꼭 셋인터벌이 함수로 만들어져 함수명으로 소환되어야한다.

let num = 0;
const testFnc = () => {
  num++;
  document.write(num, "<br/>");
  if (num === 10) {
    return;
  }
  testFnc();
};

testFnc();

//10까지 숫자를 실행
//먼저 반복실행할 숫자를 담을 빈 그릇을 준비
//반복문 없이 조건 if와 return을 사용하여 제작하기.
//함수안에 증감 연산자를 사용하여 값을 증가 시킴. 해당 값을 출력함.
//조건문으로 끝낼 부분에서 값을 리턴시키는 함수를 넣음.
//해당 함수를 실행시켜 다시 해당 함수를 반복 실행
//if의 조건에 맞아지면 리턴을 주어 값을 밖으로 뺌.  밖에 함수 실행문을 통해 최종값을 실행함

//return은 단순히 조결하는 의미가 아닌 값을 반환하는 것. 즉 함수의 출구를 열어주는 것.

setTimeout(() => {
  console.log("3초 지남");
}, 3000);

//지정한 시간이 지나면 값을 보낸다.
